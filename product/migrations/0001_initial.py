# Generated by Django 4.2.21 on 2025-06-03 11:20

import autoslug.fields
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplyCoupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_code', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CatalogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(default=None, editable=False, null=True, populate_from='name', unique=True)),
                ('banner', models.ImageField(default=None, max_length=255, null=True, upload_to='productsCategory')),
                ('description', ckeditor.fields.RichTextField(blank=True, default=None, null=True)),
                ('short_description', ckeditor.fields.RichTextField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('cat_for', models.SmallIntegerField(choices=[('', 'select'), (1, 'Grocery'), (2, 'Restaurants')], default=1)),
                ('status', models.SmallIntegerField(choices=[('', 'select'), (1, 'Active'), (0, 'Inactive')], default=1)),
                ('extra_eta', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Categories',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CatalogSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(default=None, editable=False, null=True, populate_from='name', unique=True)),
                ('banner', models.ImageField(default=None, max_length=255, null=True, upload_to='productsSubCategory')),
                ('description', ckeditor.fields.RichTextField(blank=True, default=None, null=True)),
                ('short_description', ckeditor.fields.RichTextField(blank=True, default=None, null=True)),
                ('extra_eta', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('status', models.SmallIntegerField(choices=[('', 'select'), (1, 'Active'), (0, 'Inactive')], default=1)),
                ('subcat_for', models.SmallIntegerField(choices=[('', 'select'), (1, 'Grocery'), (2, 'Restaurants')], default=1)),
            ],
            options={
                'verbose_name': 'Sub Categories',
                'verbose_name_plural': 'Sub Categories',
            },
        ),
        migrations.CreateModel(
            name='DeliveryBoyRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deliveryboy_id', models.IntegerField(null=True)),
                ('rating', models.IntegerField(null=True)),
                ('messages', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating_for', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(default=None, max_length=255, null=True, upload_to='products')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.SmallIntegerField(choices=[('', 'select'), (1, 'Active'), (0, 'Inactive')], default=1)),
            ],
            options={
                'verbose_name_plural': 'Product Images',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('subtotal', models.CharField(blank=True, max_length=255, null=True)),
                ('total', models.CharField(blank=True, max_length=255, null=True)),
                ('order_quantity', models.IntegerField(null=True)),
                ('coupon_code', models.CharField(blank=True, max_length=255, null=True)),
                ('coupon_discount', models.CharField(blank=True, max_length=255, null=True)),
                ('prime_discount', models.CharField(blank=True, default=0, max_length=20, null=True)),
                ('coupon_discount_amount', models.CharField(blank=True, max_length=255, null=True)),
                ('tip_amount', models.IntegerField(null=True)),
                ('tip_status', models.IntegerField(null=True)),
                ('delivery_signature', models.ImageField(default=None, max_length=255, null=True, upload_to='signatures/')),
                ('cancel_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('cancel_remark', models.CharField(blank=True, max_length=255, null=True)),
                ('tip', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_instructions', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_instruction_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_delete', models.IntegerField(default=0)),
                ('delivery_boy_id', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_status_merchant', models.CharField(blank=True, max_length=255, null=True)),
                ('plan_id', models.IntegerField(default=0, null=True)),
                ('delivery_time', models.CharField(blank=True, default=0, max_length=255, null=True)),
                ('payment_mode', models.CharField(blank=True, default=0, max_length=255, null=True)),
                ('payment_status', models.CharField(blank=True, default=0, max_length=255, null=True)),
                ('reached', models.CharField(blank=True, default=0, max_length=20, null=True)),
                ('skip_rating', models.IntegerField(default=0)),
                ('delivery_charges', models.IntegerField(default=0, null=True)),
                ('address', models.CharField(blank=True, default=0, max_length=255, null=True)),
                ('order_for', models.CharField(blank=True, default=1, max_length=255, null=True)),
                ('iteam_unavailable', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'permissions': [('can_view_order', 'Can view orders'), ('can_change_order', 'Can change orders'), ('can_add_order', 'Can add orders'), ('can_delete_order', 'Can delete orders')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255)),
                ('name_slug', autoslug.fields.AutoSlugField(default=None, editable=False, null=True, populate_from='product_name')),
                ('sku', models.CharField(max_length=255, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product_description', ckeditor.fields.RichTextField(blank=True, default=None, null=True)),
                ('product_short_description', ckeditor.fields.RichTextField(blank=True, default=None, null=True)),
                ('quantity', models.IntegerField(null=True)),
                ('product_weight', models.CharField(blank=True, default=1, max_length=255)),
                ('product_image', models.ImageField(blank=True, default=None, max_length=255, null=True, upload_to='products')),
                ('product_url', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.SmallIntegerField(choices=[('', 'select'), (1, 'Active'), (0, 'Inactive')], default=1)),
                ('product_for', models.SmallIntegerField(choices=[('', 'select'), (1, 'Grocery'), (2, 'Restaurants')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='ProductBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, default=None, editable=False, null=True, populate_from='name', unique=True)),
                ('image', models.ImageField(default=None, max_length=255, null=True, upload_to='brands')),
                ('content', ckeditor.fields.RichTextField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.SmallIntegerField(choices=[('', 'select'), (1, 'Active'), (0, 'Inactive')], default=1)),
                ('brand_for', models.SmallIntegerField(choices=[('', 'select'), (1, 'Grocery'), (2, 'Restaurants')], default=1)),
            ],
            options={
                'verbose_name': 'Product Brand',
                'verbose_name_plural': 'Product Brand',
            },
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(null=True)),
                ('product_id', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating_for', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(default=None, editable=False, null=True, populate_from='name', unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.SmallIntegerField(choices=[('', 'select'), (1, 'Active'), (0, 'Inactive')], default=1)),
            ],
            options={
                'verbose_name': 'Product Tags',
                'verbose_name_plural': 'Product Tags',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(default=None, editable=False, null=True, populate_from='name', unique=True)),
                ('banner', models.ImageField(default=None, max_length=255, null=True, upload_to='productsCategory')),
                ('description', ckeditor.fields.RichTextField(blank=True, default=None, null=True)),
                ('short_description', ckeditor.fields.RichTextField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('status', models.SmallIntegerField(choices=[('', 'select'), (1, 'Active'), (0, 'Inactive')], default=1)),
                ('tag_for', models.SmallIntegerField(choices=[('', 'select'), (1, 'Grocery'), (2, 'Restaurants')], default=1)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tag',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.SmallIntegerField(default=1)),
                ('looking_for', models.CharField(blank=True, default=1, max_length=255, null=True)),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SerachProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Seo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_key', models.CharField(default=None, max_length=255, null=True)),
                ('meta_title', models.CharField(default=None, max_length=255, null=True)),
                ('meta_keywords', ckeditor.fields.RichTextField()),
                ('meta_description', ckeditor.fields.RichTextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.SmallIntegerField(default=1)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
            options={
                'verbose_name_plural': 'SEO Fields',
            },
        ),
        migrations.CreateModel(
            name='ProductDiscountm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.IntegerField(default=0)),
                ('startdate', models.DateField(blank=True, max_length=255, null=True)),
                ('enddate', models.DateField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.SmallIntegerField(choices=[('', 'select'), (1, 'Active'), (0, 'Inactive')], default=1)),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='Brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.productbrand'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.catalogcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_tags',
            field=models.ManyToManyField(blank=True, to='product.producttag'),
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.catalogsubcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, to='product.tag'),
        ),
        migrations.CreateModel(
            name='OrderRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(null=True)),
                ('messages', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating_for', models.IntegerField(default=1)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.order')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_quantity', models.IntegerField(null=True)),
                ('order_status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_offer', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('removeItem', models.SmallIntegerField(default=0)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.order')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
        ),
    ]
